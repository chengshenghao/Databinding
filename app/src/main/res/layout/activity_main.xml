<layout
    xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:tools="http://schemas.android.com/tools">

    <data>
        <!--DataBinding还支持三元表达式功能，如在布局文件中添加如下节点
            但是需要注意的是：引用了API原有的类，如View，是需要通过import节点导入的，不然会报错-->
        <import type="android.view.View" />

        <variable
            name="user"
            type="com.example.csh.databinding.User" />

        <variable
            name="handler"
            type="com.example.csh.databinding.MyHandler"/>

        <variable
            name="task"
            type="com.example.csh.databinding.MyTask"/>
    </data>

    <LinearLayout
        android:layout_width="match_parent"
        android:layout_height="match_parent"
        android:orientation="vertical">

        <TextView
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:text="@{user.firstName}" />

        <!-- 三元表达式 -->
        <TextView
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:text="@{user.phone}"
            android:visibility="@{user.isShowPhone ? View.VISIBLE : View.GONE}" />

        <!--类方法的绑定-->
        <TextView
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:text="@{user.getFullName(user.firstName, user.lastName)}" /> <!--调用User类里面的获取全名的方法-->
        <!--事件绑定-->
        <Button
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:text="ShowToast"
            android:onClick="@{handler::showTost}"/>

        <!-- 监听绑定 使用lambda表达式 -->
        <Button
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:text="run"
            android:onClick="@{() -> handler.onEventListenerExecute(task)}"/>

    </LinearLayout>


</layout>